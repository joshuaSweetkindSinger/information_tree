<li>Rails Magic</li>
<p>The rails framework institutes many conventions behind-the-scenes.
  For those developers who understand the conventions, their existence
  enables fast development of web applications. For those who do not understand them,
  looking at parts of a rails app can yield confusion. The connecting dots are not
  explicitly on the page, so things seem to happen as if by magic.
  This document describes many of the components of rails magic.
</p>

<ul>
  <li>
    <%= link_to 'Rails Controller Params',
                'rails_controller_params'
    %>
  </li>
  <li>
    <%= link_to 'Control Flow For Page Rendering',
                'rails_control_flow_for_page_rendering'
    %>
  </li>

  <li>Underscores for partials</li>
  <p>When asking a view to render a partial, as in<p>
  <pre>
    render "my_partial"
  </pre>
  <p>, the file that rails searches for is actually going to be <code>_my_partial</code>.
  In rails, the names of all partial files begin with an underscore, but that underscore
  is never specified when naming the partial. The rails code tacks it on automatically.
  If you fail to name your partial with an underscore, it won't be found when rails searches for it.
  </p>
  <li>Elision of asset subdirectories</li>
  <p>
    Note that an asset path specified as <code>src="/assets/personalis_vp_eng.pdf"</code> finds
    a file actually located in <code>"/assets/images/personalis_vp_eng.pdf"</code>. Rails seems to do some magic
    to elide the <code>images</code> subdirectory, which it takes to be a standard part of the framework. There
    are other subdirectories too, of assets, and I believe reails will find the file no matter which subdir
    it is in, so long as it is a "standard" subdir. The list of subdirs that rails searches is probably controllable
    as a config parameter.
  </p>
</ul>
